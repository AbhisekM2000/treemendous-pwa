{"version":3,"sources":["components/NavBar.js","components/Categories.js","components/ImageTab.js","components/Footer.styled.js","components/Footer.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","display","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","classes","className","AppBar","style","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","fontSize","fontWeight","InputBase","placeholder","input","inputProps","Categories","margin","styled","img","ImageTab","props","name","content","src","alt","FooterWrapper","div","EndDetails","Logo","FooterContent","Footer","lineHeight","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"uUAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJJ,SAAU,GACTF,EAAMO,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,UAGbC,OAAO,aACLC,SAAU,WACVC,aAAcZ,EAAMa,MAAMD,aAC1BE,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZC,MAAO,QACNpB,EAAMO,YAAYC,GAAG,MAAQ,CAC5BW,WAAYnB,EAAMK,QAAQ,GAC1Be,MAAO,SAGXC,WAAY,CACVC,QAAStB,EAAMK,QAAQ,EAAG,GAC1BkB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACff,QAAS,OACTgB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAAStB,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCyB,YAAY,cAAD,OAAgB9B,EAAMK,QAAQ,GAA9B,OACX0B,WAAY/B,EAAMgC,YAAYC,OAAO,SACrCb,MAAO,QACNpB,EAAMO,YAAYC,GAAG,MAAQ,CAC5BY,MAAO,OACP,UAAW,CACTA,MAAO,cA4CAc,MAtCf,WACE,IAAMC,EAAUrC,IAEhB,OACE,qBAAKsC,UAAWD,EAAQlC,KAAxB,SACE,cAACoC,EAAA,EAAD,CAAQ1B,SAAS,SAAS2B,MAAO,CAACxB,gBAAgB,WAAlD,SACE,eAACyB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLL,UAAWD,EAAQhC,WACnByB,MAAM,UACNc,aAAW,cAJb,SAME,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYP,UAAWD,EAAQ7B,MAAOsC,QAAQ,KAAKC,QAAM,EAACP,MAAO,CAACQ,SAAS,MAAMC,WAAW,QAA5F,yBAGA,sBAAKX,UAAWD,EAAQzB,OAAxB,UACE,qBAAK0B,UAAWD,EAAQd,WAAxB,SACE,cAAC,IAAD,MAEF,cAAC2B,EAAA,EAAD,CACEC,YAAY,eACZd,QAAS,CACPlC,KAAMkC,EAAQR,UACduB,MAAOf,EAAQN,YAEjBsB,WAAY,CAAE,aAAc,uBCxFpCrD,EAAYC,aAAW,SAACC,GAAD,MAAW,CACpCM,MAAM,aACFJ,SAAU,GACTF,EAAMO,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,cAmBJ2C,I,EAAAA,EAbf,WACI,IAAMjB,EAAQrC,IACd,OAEI,qBAAKwC,MAAO,CAACe,OAAO,QAApB,SACI,cAACV,EAAA,EAAD,CAAYP,UAAWD,EAAQ7B,MAAOsC,QAAQ,KAAKC,QAAM,EAACP,MAAO,CAACS,WAAW,OAAOnB,MAAM,WAA1F,2B,gBCZN9B,G,MAAYC,aAAW,SAACC,GAAD,MAAW,CACpCM,MAAM,aACFJ,SAAU,GACTF,EAAMO,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,eAKF6C,IAAOC,IAAR,4EAqBDC,I,QAAAA,EAjBf,SAAkBC,GACd,IAAMtB,EAAQrC,IAEd,OACI,sBAAKsC,UAAU,MAAf,UACI,sBAAMsB,KAAK,WAAWC,QAAQ,0CAC9B,qCAAY,qBAAKC,IAAI,yBAAyBC,IAAI,UAClD,qBAAKvB,MAAO,CAACe,OAAO,QAApB,SACI,cAACV,EAAA,EAAD,CAAYP,UAAWD,EAAQ7B,MAAOsC,QAAQ,KAAKC,QAAM,EAACP,MAAO,CAACS,WAAW,OAAOnB,MAAM,WAA1F,SACC6B,EAAMC,aC1BVI,EAAcR,IAAOS,IAAR,yRAabC,EAAWV,IAAOS,IAAR,+MASVE,EAAKX,IAAOS,IAAR,gFAKJG,EAAcZ,IAAOS,IAAR,4BCIXI,MA9Bf,WACI,OACI,8BAEI,cAACL,EAAD,UACQ,eAACI,EAAD,WAEI,cAACF,EAAD,UACA,mBAAG1B,MAAO,CAACQ,SAAS,OAAOsB,WAAW,QAAtC,4BAEA,eAACH,EAAD,WACI,qBAAKL,IAAI,wBAAwBtB,MAAO,CAAChB,QAAQ,QAASuC,IAAI,QAC9D,qBAAKD,IAAI,yBAAyBtB,MAAO,CAAChB,QAAQ,QAASuC,IAAI,QAC/D,qBAAKD,IAAI,uBAAuBtB,MAAO,CAAChB,QAAQ,QAASuC,IAAI,QAC7D,qBAAKD,IAAI,yBAAyBtB,MAAO,CAAChB,QAAQ,QAASuC,IAAI,WAEnE,eAACG,EAAD,WACA,4CACA,8CACA,gDACA,kDACA,uDCFTK,MAhBf,WAEE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAUX,KAAK,mBACf,cAAC,EAAD,CAAUA,KAAK,kBACf,cAAC,EAAD,CAAUA,KAAK,qBACf,cAAC,EAAD,CAAUA,KAAK,eACf,cAAC,EAAD,CAAUA,KAAK,iBACf,cAAC,EAAD,QCNAY,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC9FjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFSnB,SAAkB9B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI8B,IAAIC,GAAwBtC,OAAOC,SAASsC,MACpDC,SAAWxC,OAAOC,SAASuC,OAIvC,OAGFxC,OAAOyC,iBAAiB,QAAQ,WAC9B,IAAMpC,EAAK,UAAMiC,GAAN,sBAEPxC,IAgEV,SAAiCO,EAAOC,GAEtCoC,MAAMrC,EAAO,CACXsC,QAAS,CAAE,iBAAkB,YAE5BjC,MAAK,SAACkC,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzC,UAAUC,cAAcyC,MAAMvC,MAAK,SAACC,GAClCA,EAAauC,aAAaxC,MAAK,WAC7BV,OAAOC,SAASkD,eAKpB/C,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFViC,CAAwB/C,EAAOC,GAI/BC,UAAUC,cAAcyC,MAAMvC,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OE/B/B+C,GAKA7B,M","file":"static/js/main.a92c4d73.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '40vw',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: '40vw',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nfunction NavBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\" style={{backgroundColor:\"#eb4f34\"}}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h4\" noWrap style={{fontSize:\"5vw\",fontWeight:\"bold\"}}>\n            treemendous\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\nexport default NavBar;\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>({\n    title: {\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      }\n}));\n\n\nfunction Categories() {\n    const classes=useStyles();\n    return (\n        \n        <div style={{margin:\"20px\"}}>\n            <Typography className={classes.title} variant=\"h4\" noWrap style={{fontWeight:\"bold\",color:\"#525054\"}}>\n                Categories\n            </Typography>\n\n        </div>\n    )\n}\n\nexport default Categories\n","import React from 'react';\nimport styled from 'styled-components';\nimport './Shadow.css'\n\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>({\n    title: {\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      }\n}));\n\nconst imagStyled=styled.img`\n    margin-right: 50px;\n    box-shadow: 10px;\n`\nfunction ImageTab(props) {\n    const classes=useStyles();\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta>\n    return (\n        <div className=\"box\" >\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta>\n            <imagStyled><img src=\"./images/Ellipse10.png\" alt=\"img\"/></imagStyled>\n            <div style={{margin:\"20px\"}}>\n                <Typography className={classes.title} variant=\"h5\" noWrap style={{fontWeight:\"bold\",color:\"#525054\"}}>\n                {props.name}\n                </Typography>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default ImageTab\n","// import React from 'react'\nimport styled from 'styled-components'\n\nexport const FooterWrapper=styled.div`\n    background-color: #eb4f34;\n    opacity: 0.8;\n    height:271px;\n    padding: 5px;\n    margin-top:40px;\n    display: flex;\n    flex-direction: columns;\n    justify-content: center;\n    align-items: center;\n    justify-content: center;\n    \n`\nexport const EndDetails=styled.div`\n    font-weight: 600;\n    font-size:14px;\n    line-height: 21px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n`\nexport const Logo=styled.div`\n    justify-content: center;\n    cursor: pointer;\n`\n\nexport const FooterContent=styled.div`\n`","import React from 'react';\n// import styled from 'styled-components'\nimport {FooterWrapper,FooterContent,Logo,EndDetails} from './Footer.styled'\n\nfunction Footer() {\n    return (\n        <div>\n\n            <FooterWrapper>\n                    <FooterContent>\n\n                        <EndDetails>\n                        <p style={{fontSize:\"24px\",lineHeight:\"21px\"}}>Follow us on</p>\n                        </EndDetails>\n                        <Logo>\n                            <img src='./images/facebook.svg' style={{padding:\"10px\"}} alt=\"img\"/>\n                            <img src='./images/instagram.svg' style={{padding:\"10px\"}} alt=\"img\"/>\n                            <img src='./images/twitter.svg' style={{padding:\"10px\"}} alt=\"img\"/>\n                            <img src='./images/pinterest.svg' style={{padding:\"10px\"}} alt=\"img\"/>\n                        </Logo>\n                        <EndDetails>\n                        <href >About us</href>\n                        <href >Contact us</href>\n                        <href >Our Products</href>\n                        <href >Privacy Policy</href>\n                        <href > Careers</href>\n                        </EndDetails>\n                    </FooterContent>\n                    \n            </FooterWrapper>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport Categories from './components/Categories';\nimport ImageTab from './components/ImageTab';\nimport Footer from './components/Footer';\n\nfunction App() {\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta>\n  return (\n    <div>\n      <NavBar />\n      <Categories/>\n      <ImageTab name=\"Floor Planters\"/>\n      <ImageTab name=\"Wall Planters\"/>\n      <ImageTab name=\"Artificial Grass\"/>\n      <ImageTab name=\"Deck Tiles\"/>\n      <ImageTab name=\"Miscellanous\"/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}